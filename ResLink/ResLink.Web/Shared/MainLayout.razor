@inherits LayoutComponentBase
@inject BackendlessService BS
@inject DialogService DialogService
@inject NavigationManager NavigationManager

<RadzenDialog />
<RadzenNotification />
<RadzenContextMenu /> 
<RadzenTooltip />

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="top-row px-5 shadow">
       
        <div class="m-4">

            @if (LoggedUser != null)
            {
                <RadzenSplitButton Click=@(args => OnClick(args)) Text="@(LoggedUser.Student.FullNames + " " + LoggedUser.Student.LastName)" Icon="account_circle" Style="margin-bottom: 20px;">
                    <ChildContent>
                        <RadzenSplitButtonItem Text="View Profile" Value="1" Icon="account_circle" />
                        <RadzenSplitButtonItem Text="Logout" Value="2" Icon="logout" />
                    </ChildContent>
                </RadzenSplitButton>

            }

            @if (Manager != null)
            {
                <RadzenSplitButton Click=@(args => OnClick(args)) Text="@(Manager.ManagerFirstName + " " + Manager.ManagerLastName)" Icon="account_circle" Style="margin-bottom: 20px;">
                    <ChildContent>
                        <RadzenSplitButtonItem Text="View Profile" Value="1" Icon="account_circle" />
                        <RadzenSplitButtonItem Text="Logout" Value="2" Icon="logout" />
                    </ChildContent>
                </RadzenSplitButton>
            }
        </div>
    </div>

    <div class="content px-4">
        @Body
    </div>
</div>

@code{ 


    public HouseCommittee LoggedUser { get; set; }
    public ResidenceManager Manager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var account = await UserAccountRepository.GetCurrentlyLoggedAccount();
        var userRole = (UserRole)account.GetProperty("userRole");

       
        if (userRole.RoleId == 0)//if Manager
        {
            Manager = await UserAccountRepository.GetLoggedManager();
            
        }

        if(userRole.RoleId == 1)//if admin
        {
            LoggedUser = await UserAccountRepository.GetLoggedHouseCommittee();
        }

    }


    private async Task OnClick(RadzenSplitButtonItem item)
    {
        if(item != null)
        {
            //View profile
            if(item.Value == "1")
            {
                if(Manager != null)
                {
                    await DialogService.OpenAsync<UserProfile>("User Profile", new Dictionary<string, object> { { "ManagerProfile", Manager } });
                }

                if(LoggedUser != null)
                {
                    await DialogService.OpenAsync<UserProfile>("User Profile", new Dictionary<string, object> { { "HCProfile", LoggedUser } });
                }
            }

            //Logout
            if(item.Value == "2")
            {
                NavigationManager.NavigateTo("/logout");
            }
        }
    }

}
