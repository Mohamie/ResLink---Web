@page "/announcements"
@inject DialogService DialogService
@inject NotificationService NotificationService

<RadzenButton class="my-4" Text="Add Announcement" Icon="add_circle_outline" Click="(() => AddAnnouncement())" />


<AnnouncementsList IsDisplayOnly="false"/>

@code
{
    //Create a ViewModel for Announcements
    AnnouncementViewModel announcementViewModel;


    async Task AddAnnouncement()
    {
        announcementViewModel = await DialogService.OpenAsync<AddAnnouncementPage>("Add Announcement");


        //Todo: Extract data from ViewModel to Model, add relationships like category, severity and authur of the announcement
        if (announcementViewModel != null)
        {

            //Annoucement object to save to database
            Announcement announcement = new Announcement();

            announcement.AnnouncementTitle = announcementViewModel.AnnouncementTitle;
            announcement.AnnouncementDescription = announcementViewModel.AnnouncementDescription;


            announcement = await AnnouncementRepository.SaveAnnouncement(announcement);

            //if its saved and retrived
            if(announcement != null)
            {
                object[] childObject = new object[] { await UserAccountRepository.GetLoggedHouseCommittee()};
                await AnnouncementRepository.SetRelation(announcement, "hc", childObject);

                NotificationMessage message = new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Announcement:", Detail = "Added Successfuly", Duration = 4000 };

                NotificationService.Notify(message);
            }


        }

    }
}
