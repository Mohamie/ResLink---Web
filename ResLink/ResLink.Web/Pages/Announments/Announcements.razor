@page "/announcements"
@inject DialogService DialogService
@inject NotificationService NotificationService

<RadzenButton class="my-4" Text="Add Announcement" Icon="add_circle_outline" Click="(() => AddAnnouncement())" />


<AnnouncementsList/>

@code
{
    //Create a ViewModel for Announcements
    AnnouncementViewModel announcementViewModel;

    public List<AlertSeverity> AlertSeverities{ get; set; }

    protected async override Task OnInitializedAsync()
    {
        AlertSeverities = (await AlertSeverityRepository.GetAlertSeverities()).ToList();
    }

    async Task AddAnnouncement()
    {
        announcementViewModel = await DialogService.OpenAsync<AddAnnouncementPage>("Add Announcement", new Dictionary<string, object> { { "AlertSeverities", AlertSeverities } });

        //Todo: Extract data from ViewModel to Model, add relationships like category, severity and authur of the announcement
        if (announcementViewModel != null)
        {


            //await AnnouncementRepository.SaveAnnouncement(announcement);

            NotificationMessage message = new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Announcement:", Detail = "Added Successfuly", Duration = 4000 };

            NotificationService.Notify(message);
        }

    }
}
