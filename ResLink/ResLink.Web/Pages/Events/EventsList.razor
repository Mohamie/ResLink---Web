@inject DialogService DialogService

<h3 class="text-muted">Events List</h3>

<RadzenGrid class="shadow m-1" AllowFiltering="true" AllowPaging="true" PageSize="10"
            AllowSorting="true" Data="@events" TItem="Event" ColumnWidth="200px">
    <Columns>
        <RadzenGridColumn TItem="Event" Property="EventTitle" Title="Title" />
        <RadzenGridColumn TItem="Event" Property="EventDescription" Title="Description" />
        <RadzenGridColumn TItem="Event" Property="EventStartTime" Title="Date Scheduled" />
        <RadzenGridColumn TItem="Event" Property="Coordinator.Student.FullNames" Title="Coordinator" />

        <RadzenGridColumn TItem="Event" Context="_event" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="100px">

            <Template Context="_event">

                <RadzenButton Icon="visibility" Size="ButtonSize.Medium" Click="((args) => Details(_event))" />

            </Template>

        </RadzenGridColumn>

    </Columns>
</RadzenGrid>

@code {

    List<Event> events = new List<Event>();


    protected override async Task OnInitializedAsync()
    {
        events = await EventRepository.GetEvents() as List<Event>;
    }

    private async Task Details(Event _event)
    {
        await DialogService.OpenAsync<EventDetailsPage>("Event Details", new Dictionary<string, object> { { "Event", _event } });
    }

}
