@inject DialogService DialogService 


<EditForm class="form-group" Model="studentView" OnValidSubmit="OnSubmit">

    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <RadzenLabel Text="Student Number" />
    <RadzenTextBox class="form-control my-2" @bind-Value="studentView.StudentNumber" />

    <RadzenLabel Text="First Name" />
    <RadzenTextBox class="form-control my-2" @bind-Value="studentView.FirstNames" />

    <RadzenLabel Text="Last Name" />
    <RadzenTextBox class="form-control my-2" @bind-Value="studentView.LastName" />

    <RadzenLabel Text="Gender" />
    <InputSelect disabled class="custom-select my-2" @bind-Value="studentView.Gender">

    @foreach (GenderViewModel gender in Enum.GetValues(typeof(GenderViewModel)))
    {
        <option value="@gender"> @gender </option>
    }

    </InputSelect>

    <RadzenLabel Text="Role" />
    <InputSelect disabled class="custom-select my-2" @bind-Value="studentView.Role">

        @foreach (StudentRoleViewModel role in Enum.GetValues(typeof(StudentRoleViewModel)))
    {
    <option value="@role"> @role </option>
}

    </InputSelect>


    @if (studentView.Role == StudentRoleViewModel.HouseCommittee)
    {
        <RadzenLabel Text="House Committee Role: "/>
        <InputSelect class="custom-select" @bind-Value="studentView.HCRole">

            @foreach (var role in HCRoles)
                {
                <option value="@role.HcRoleID">@role.HcRoleName</option>
                }

        </InputSelect>

    }

    <RadzenLabel Text="Email" />
    <RadzenTextBox class="form-control my-2" @bind-Value="studentView.Email" />

    <RadzenLabel Text="Set Password" />
    <RadzenPassword class="form-control my-2" @bind-Value="studentView.Password" />

    <RadzenButton class="my-2" Text="Register" Icon="note_add" ButtonType="ButtonType.Submit" />



    </EditForm>


@code 
{
    StudentViewModel studentView = new StudentViewModel();
    
    [Parameter]
    public GenderViewModel Gender { get; set; }
    
    [Parameter]
    public StudentRoleViewModel Role { get; set; }

    [Parameter]
    public List<HCRole> HCRoles { get; set; }


    Student student = new Student();

    protected override void OnInitialized()
    {
        //studentView.Gender = GenderViewModel.Male;
        studentView.Role = Role;
    }

    private void OnSubmit()
    {
        DialogService.Close(student);
    }
}
